import deepimpact
import requests
import numpy as np
import pandas as pd
import json
import matplotlib.pyplot as plt
import pprint
from flask import Flask, render_template, jsonify 
#######################

SPKID = "3542519"  # example SPK-ID for an asteroid

def get_earth_velocity(SPKID) -> pd.DataFrame:
    url = f"https://api.nasa.gov/neo/rest/v1/neo/{SPKID}?api_key=WLnxw2BlieP9zAAfu9MHwN5NwZOhytUmRVjBzTcW"
    response = requests.get(url)
    data = response.json()


    close_approaches: list= data.get("close_approach_data", [])
    print(close_approaches[2])

    # This is a list
    earth_approaches = [
        {
            "relative_velocity_km_s": float(approach["relative_velocity"]["kilometers_per_second"])
        }
        for approach in close_approaches
        if approach["orbiting_body"] == "Earth"
    ]

    df = pd.DataFrame(earth_approaches)

    return df.mean()
print(get_earth_velocity("3542519"))


def smallbody_pull(SPKID):
    url = f"https://ssd-api.jpl.nasa.gov/sbdb_query.api?fields=spkid,diameter"
    response = requests.get(url)
    data = response.json()

    #pprint.pprint(data['near_earth_objects'])
    #print(len(data['near_earth_objects'][0]['close_approach_data'][0]))
    diameter_data = data.get(str(SPKID), [])

    diameters = [
        {
            str(SPKID): float(approach["diameter"]["km"])
        }
        for approach in diameter_data
        if diameter_data[approach] == str(SPKID)
    ]

    df = pd.DataFrame(diameters)
    

    return df


print(smallbody_pull(SPKID))
    
## want this to return in a format where we can have the attributes indexable